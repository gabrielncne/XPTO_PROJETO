@model XPTO_Project.Nota

@{
    ViewBag.Title = "Create";
}

<h2>Criar Nota</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.Label("N° da OS", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.nOS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nOS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Titulo do Serviço", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.TituloServico, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TituloServico, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("CNPJ do Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.CNPJCliente, new { htmlAttributes = new { @class = "form-control", id = "CNPJCliente" } })
            @Html.ValidationMessageFor(model => model.CNPJCliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Nome do Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.NomeCliente, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NomeCliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("CPF do Prestador de Serviço", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.CPFPrestadorServico, new { htmlAttributes = new { @class = "form-control", id = "CPFPrestadorServico" } })
            @Html.ValidationMessageFor(model => model.CPFPrestadorServico, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Nome do Serviço", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.NomePrestadorServico, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NomePrestadorServico, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Data_de_Execu__o">Data de Execução</label>
        <div class="col-md-12">
            <input class="form-control hasDatepicker" data-val="true" data-val-date="Por favor, insira uma data válida." id="DataExecucao" name="DataExecucao" type="text" value="">
            <span class="field-validation-valid text-danger" data-valmsg-for="DataExecucao" data-valmsg-replace="true"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Valor do Serviço", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.TextBoxFor(model => model.ValorServico, new { @class = "form-control", id = "ValorServico", type = "number", step = "0.01", min = "0" })
            @Html.ValidationMessageFor(model => model.ValorServico, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 d-flex justify-content-end">
            <input type="submit" value="Criar" class="btn btn-sucess btn-edit" style="justify-content: center;" />
        </div>
    </div>
</div>
}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function redirectToHome() {
            event.preventDefault();
            window.location.href = 'https://localhost:44340/';
        }</script>

    <link href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>
    
    <script>
        $(document).ready(function () {
            $('#CNPJCliente').mask('00.000.000/0000-00', { reverse: true });
            $('#CPFPrestadorServico').mask('000.000.000-00', { reverse: true });

            // Adiciona a validação customizada para CNPJ
            $.validator.addMethod("cnpj", function (value, element) {
                return this.optional(element) || /^\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2}$/.test(value);
            }, "Por favor, insira um CNPJ válido.");

            // Adiciona a validação customizada para CPF
            $.validator.addMethod("cpf", function (value, element) {
                return this.optional(element) || /^\d{3}\.\d{3}\.\d{3}\-\d{2}$/.test(value);
            }, "Por favor, insira um CPF válido.");

            $.validator.addMethod("valorServico", function (value, element) {
                return this.optional(element) || /^\d+(\.\d{1,2})?$/.test(value);
            }, "Por favor, insira um valor válido.");

            // Aplica as regras de validação
            $("#CNPJCliente").rules("add", {
                required: true,
                cnpj: true,
                messages: {
                    required: "Este campo é obrigatório."
                }
            });

            $("#CPFPrestadorServico").rules("add", {
                required: true,
                cpf: true,
                messages: {
                    required: "Este campo é obrigatório."
                }
            });

            $("#nOS, #TituloServico, #NomeCliente, #NomePrestadorServico, #DataExecucao, #ValorServico").each(function () {
                $(this).rules("add", {
                    required: true,
                    messages: {
                        required: "Este campo é obrigatório."
                    }
                });
            });
        });

        $(document).ready(function () {
            $('#DataExecucao').datepicker({
                dateFormat: 'dd/mm/yy'
            });
        });

        $.validator.methods.date = function (value, element) {
            return this.optional(element) || /^(\d{1,2})\/(\d{1,2})\/(\d{4})$/.test(value);
        };
    </script>


}
